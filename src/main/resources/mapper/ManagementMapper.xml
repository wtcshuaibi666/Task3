<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnshu.mapper.ManagementMapper">
  <resultMap id="BaseResultMap" type="com.jnshu.entity.Management">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pro_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="first_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="sec_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_at" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="update_at" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="create_by" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, pro_name, first_name, sec_name, status, create_at, update_at, create_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pro_manage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pro_manage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <select id="findAll" resultType="Management"  resultMap="BaseResultMap">
    select*from pro_manage
  </select>
  <insert id="insertSelective" parameterType="com.jnshu.entity.Management">
    insert into pro_manage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pro_name != null">
        pro_name,
      </if>
      <if test="first_name != null">
        first_name,
      </if>
      <if test="sec_name != null">
        sec_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="create_at != null">
        create_at,
      </if>
      <if test="update_at != null">
        update_at,
      </if>
      <if test="create_by != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pro_name != null">
        #{pro_name,jdbcType=VARCHAR},
      </if>
      <if test="first_name != null">
        #{first_name,jdbcType=VARCHAR},
      </if>
      <if test="sec_name != null">
        #{sec_name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="create_at != null">
        #{create_at,jdbcType=BIGINT},
      </if>
      <if test="update_at != null">
        #{update_at,jdbcType=BIGINT},
      </if>
      <if test="create_by != null">
        #{create_by,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jnshu.entity.Management">
    update pro_manage
    <set>
      <if test="pro_name != null">
        pro_name = #{pro_name,jdbcType=VARCHAR},
      </if>
      <if test="first_name != null">
        first_name = #{first_name,jdbcType=VARCHAR},
      </if>
      <if test="sec_name != null">
        sec_name = #{sec_name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="create_at != null">
        create_at = #{create_at,jdbcType=BIGINT},
      </if>
      <if test="update_at != null">
        update_at = #{update_at,jdbcType=BIGINT},
      </if>
      <if test="create_by != null">
        create_by = #{create_by,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jnshu.entity.Management">
    update pro_manage
    set pro_name = #{pro_name,jdbcType=VARCHAR},
      first_name = #{first_name,jdbcType=VARCHAR},
      sec_name = #{sec_name,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_at = #{create_at,jdbcType=BIGINT},
      update_at = #{update_at,jdbcType=BIGINT},
      create_by = #{create_by,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>